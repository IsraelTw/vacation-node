{"version":3,"sources":["config.js","component/LogIn.jsx","component/SignUp.jsx","component/LogOut.jsx","component/user/VacationList.jsx","component/admin/VacationAdmin.jsx","component/admin/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","domain","LogIn","useState","userName","setUserName","password","setPassword","history","useHistory","a","alert","fetch","method","headers","body","JSON","stringify","user_name","sendReq","json","undefined","data","user_id","localStorage","setItem","userId","isLoggedIn","isAdmin","is_admin","push","error","console","log","Form","style","marginLeft","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","required","onChange","e","target","value","onClick","SignUp","first_name","setfirst_name","last_name","setlast_name","setuser_name","aria-describedby","LogOut","clear","float","marginTop","VactionList","user","getItem","parse","vacList","setVacList","isfollowe","setIsfollwe","search","setSearch","date","setDate","vacation","Date","useEffect","req","vacations","textAlign","marginRight","Button","variant","size","map","item","Card","className","width","Img","src","image","Text","id","vac_id","checked","follower_id","followHandler","visibility","htmlFor","followers_mount","location","description","price","start_at","end_at","VacationAdmin","setDescription","setLocation","setImage","setStart","setEnd","setPrice","deleteVac","setDeleteVac","editVac","seteditVaction","currentVac","setCurrentVac","setVac_id","show","setShow","whichButton","setWhichButton","handleShow","isEdit","vacId","vacationAdmin","to","dleteVacation","color","Modal","onHide","Header","closeButton","Body","defaultValue","addOrEditVaction","Statistics","dataLen","setLen","dataReq","quarter","earnings","fn","height","theme","VictoryTheme","material","domainPadding","x","fill","stroke","strokeWidth","barWidth","index","alignment","y","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.951984cc.chunk.js","sourcesContent":["module.exports = {\r\n    domain: 'https://vacationssss.herokuapp.com'\r\n    // domain:'http://localhost:3001'\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport { domain } from '../config';\r\n\r\nexport default function LogIn() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n    async function signInHandler() {\r\n        if (userName === \"\" || password === \"\") {\r\n            return alert('user name or password empty')\r\n        }\r\n        try {\r\n            const sendReq = await fetch(domain + `/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user_name: userName,\r\n                    password: password\r\n                })\r\n            });\r\n            const data = await sendReq.json()\r\n\r\n            if (data[0].user_id !== undefined) {\r\n                localStorage.setItem('userInfo', JSON.stringify({ userName, password, userId: data[0].user_id, isLoggedIn: true, isAdmin: data[0].is_admin }));\r\n                if (data[0].is_admin) {\r\n                    return history.push(\"./VacationAdmin\");\r\n                }\r\n                history.push(\"./VacationList\");\r\n\r\n            } else if (data.error === 'user name or password dosnet match') {\r\n                alert('user name or password dosnet match');\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log('error fetching', err);\r\n        }\r\n    }\r\n    function signUpHandler() {\r\n        history.push(\"./SignUp\");\r\n    }\r\n\r\n    return (\r\n            <Form style={{ marginLeft: '35%' }}>\r\n                <h2>Login form</h2>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <button type='button' onClick={signInHandler}>LogIn</button>\r\n                <button type='button' onClick={signUpHandler} style={{ marginLeft: '20px' }}>Register</button>\r\n            </Form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { domain } from '../config';\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n    const [first_name, setfirst_name] = useState('');\r\n    const [last_name, setlast_name] = useState('');\r\n    const [user_name, setuser_name] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function signUp() {\r\n        if (first_name === '' || last_name === '' || user_name === '' || password === '') {\r\n            alert('all fildes mandatory');\r\n            return;\r\n        }\r\n        const sendReq = await fetch(domain + '/signUp', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first_name: first_name,\r\n                last_name: last_name,\r\n                user_name: user_name,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await sendReq.json()\r\n        if (data === 'user name already exist') {\r\n            return alert(data);\r\n        }\r\n\r\n    }\r\n    function signIn() {\r\n        history.push(\"LogIn\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Form style={{ marginLeft: '2%' }} >\r\n                <h2>Register form</h2>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setfirst_name(e.target.value)}\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"First name\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Last name\"\r\n                            onChange={(e) => setlast_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomuser_name\">\r\n                        <Form.Label>user_name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"user_name\"\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            required\r\n                            onChange={(e) => setuser_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <button type='button' onClick={signUp}>SignUp</button>\r\n                <button type='button' onClick={signIn} style={{ marginLeft: '20px' }}>Login</button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LogOut() {\r\n\r\n    const history = useHistory();\r\n\r\n    function logOut() {\r\n\r\n        if (history === undefined) {\r\n            return;\r\n        }\r\n        localStorage.clear();\r\n        history.push(\"./LogIn\");\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={logOut} style={{ float: 'right', marginTop: '2%' }}>log out</button>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { domain } from '../../config';\r\nimport { Button } from 'react-bootstrap';\r\nimport LogOut from '../LogOut'\r\nexport default function VactionList() {\r\n    const history = useHistory();\r\n    let user = 'a';\r\n    if (localStorage.getItem('userInfo') === null || JSON.parse(localStorage.getItem('userInfo')).isAdmin === true) {\r\n        history.push('LogIn')\r\n    }\r\n    else {\r\n        user = JSON.parse(localStorage.getItem('userInfo'));\r\n    }\r\n    const [vacList, setVacList] = useState([]);\r\n    const [isfollowe, setIsfollwe] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [date, setDate] = useState('');\r\n    \r\n    useEffect(() => {\r\n        async function vacations() {\r\n            const req = await fetch(domain + `/vaction/${user.userId}`);\r\n            const data = await req.json();\r\n            setVacList(data[0]);\r\n        }\r\n        vacations();\r\n    }, [isfollowe])\r\n\r\n    async function followHandler(vacation) {\r\n        try {\r\n            await fetch(domain + `/isFollow`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ user_id: user.userId, vacation })\r\n            });\r\n            setIsfollwe(new Date());\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async function serachHandel() {\r\n        try {\r\n            const sendReq = await fetch(domain + '/searchVacation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ search, date, user: user.userId })\r\n            });\r\n            const data = await sendReq.json();\r\n            setVacList(data[0]);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    function clearHandel() {\r\n        setIsfollwe(new Date());\r\n        setSearch('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n            <LogOut/>\r\n            <h1>hello {user.userName}</h1>\r\n            </div>\r\n            <div style={{ marginLeft: '30%', marginRight: '30%' }}>\r\n\r\n                <input type='text' value={search} placeholder='search by description' onChange={(e) => { setSearch(e.target.value) }} />\r\n                <input type=\"date\" onChange={(e) => { setDate(e.target.value) }} />\r\n                <Button variant=\"outline-primary\" size='sm' onClick={serachHandel}>Search</Button>\r\n                <Button variant=\"outline-primary\" size='sm' onClick={clearHandel}>clear</Button>\r\n            </div>\r\n            <br />\r\n            {vacList.map(item => {\r\n                return (\r\n                    <div style={{ float: 'left', marginLeft: '5px' }}>\r\n                        <Card className='Card' style={{ width: '15rem' }}>\r\n                            <Card.Img variant=\"top\" key={item.image} src={item.image} />\r\n                            <Card.Text>\r\n                                <span style={{ float: 'right' }}>\r\n                                    <input id={item.vac_id} type=\"checkbox\" checked={item.follower_id != null} onChange={() => followHandler(item.vac_id)} style={{ float: 'right', visibility: 'hidden' }} />\r\n                                    {(() => {\r\n                                        if (item.follower_id != null) {\r\n                                            return <label htmlFor={item.vac_id} style={{ float: 'right' }}>❤️</label>\r\n                                        }\r\n                                        else {\r\n                                            return <label htmlFor={item.vac_id} style={{ float: 'right' }}>🤍</label>\r\n                                        }\r\n                                    })()}\r\n                                    <p style={{ float: 'right' }}>{item.followers_mount}</p>\r\n                                </span>\r\n                            location: {item.location}<br />\r\n                            description: {item.description}<br />\r\n                            ${item.price}<br />\r\n                            start: {item.start_at}<br />\r\n                             end: {item.end_at}<br />\r\n                                <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n        </div >\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport LogOut from '../LogOut';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport { domain } from '../../config';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nexport default function VacationAdmin() {\r\n    const history = useHistory();\r\n    let user = JSON.parse(localStorage.getItem('userInfo'));\r\n\r\n    if (localStorage.getItem('userInfo') === null || JSON.parse(localStorage.getItem('userInfo')).isAdmin == false) {\r\n        history.push(\"LogIn\");\r\n    }\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [start_at, setStart] = useState('');\r\n    const [end_at, setEnd] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [vacList, setVacList] = useState([]);\r\n    const [deleteVac, setDeleteVac] = useState(0);\r\n    const [editVac, seteditVaction] = useState(0);\r\n    const [currentVac, setCurrentVac] = useState(0);\r\n    const [vac_id, setVac_id] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [whichButton, setWhichButton] = useState('');\r\n    const handleClose = () => setShow(false);\r\n    function handleShow(isEdit, item) {\r\n        if (isEdit === 'edit') {\r\n            setDescription(item.description)\r\n            setLocation(item.location)\r\n            setImage(item.image)\r\n            setStart(item.start_at)\r\n            setEnd(item.end_at)\r\n            setPrice(item.price)\r\n        }\r\n        setShow(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function vacationAdmin() {\r\n            const req = await fetch(domain + `/vactionAdmin`);\r\n            const data = await req.json();\r\n            setVacList(data);\r\n        }\r\n        vacationAdmin();\r\n    }, [deleteVac, editVac])\r\n\r\n    async function dleteVacation(vacId) {\r\n        await fetch('http://localhost:3001/deleteVacation', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ vacId })\r\n        });\r\n        setDeleteVac(new Date())\r\n    }\r\n\r\n    async function addOrEditVaction() {\r\n        const req = await fetch(domain + `/${whichButton}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                description,\r\n                location,\r\n                image,\r\n                start_at,\r\n                end_at,\r\n                price,\r\n                vac_id\r\n            })\r\n        });\r\n\r\n        const data = await req.json();\r\n        console.log(data);\r\n        setShow(false)\r\n        seteditVaction(new Date())\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <LogOut />\r\n            <button onClick={() => { handleShow(); setWhichButton('addVacation');setCurrentVac('') }} style={{ marginTop: '2%', marginRight: '2%', float: 'right' }}>add vacation</button>\r\n            <Link to=\"/component/Statistics\">Statistics</Link>\r\n            <h1 style={{ textAlign: 'center', marginTop: '0%' }}>hello {user.userName}</h1>\r\n            { vacList.map(item => {\r\n                return (\r\n                    <div style={{ float: 'left', marginLeft: '5px' }}>\r\n                        <Card className='Card' style={{ width: '15rem' }}>\r\n                            <Button size='sm' variant=''\r\n                                onClick={() => dleteVacation(item.vac_id)}>❌</Button>\r\n                            <Card.Img variant=\"top\" key={item.image} src={item.image} />\r\n\r\n                            <Button size='sm' variant='' onClick={() => { handleShow('edit', item); setCurrentVac(item); setWhichButton('editVacation'); setVac_id(item.vac_id) }}\r\n                                style={{ color: 'gray', float: 'right', marginRight: '5px' }}>🖋</Button>\r\n                            <Card.Text>\r\n                                <p style={{ float: 'right' }}>followers: {item.followers_mount}</p>\r\n                        location: {item.location}<br />\r\n                        description: {item.description}<br />\r\n                        ${item.price}<br />\r\n                        start: {item.start_at}<br />\r\n                         end: {item.end_at}<br />\r\n                                <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </div>\r\n\r\n                )\r\n            })\r\n            }\r\n\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form style={{ marginLeft: '2%', marginRight: '2%' }} >\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => { setDescription(e.target.value) }}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description\"\r\n                                    defaultValue={currentVac.description}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                    type=\"number\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    defaultValue={currentVac.price}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Location</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setLocation(e.target.value)}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    defaultValue={currentVac.location}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    required\r\n                                    defaultValue={currentVac.image}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Start</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setStart(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"Start\"\r\n                                    required\r\n                                    defaultValue={currentVac.start_at}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>End</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setEnd(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"End\"\r\n                                    required\r\n                                    defaultValue={currentVac.end_at}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button type='button' onClick={() => addOrEditVaction()}>send</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { domain } from '../../config';\r\nimport { VictoryBar, VictoryChart, VictoryTheme } from 'victory';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nexport default function Statistics() {\r\n\r\n  const [dataLen, setLen] = useState([]);\r\n  useEffect(() => {\r\n    async function fn() {\r\n      const req = await fetch(domain + '/vacationFollowed');\r\n      const dataReq = await req.json();\r\n      setLen(dataReq[0].map(item => {\r\n        return ({ quarter: 'vacation ' + item.vac_id, earnings: item.followers_mount })\r\n      }))\r\n    }\r\n    fn();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/component/VacationAdmin\">vacation</Link>\r\n      <div style={{ width: '50%', height: '40%' }}>\r\n        <VictoryChart\r\n          theme={VictoryTheme.material}\r\n          domainPadding={{ x: 30 }}\r\n        >\r\n          <VictoryBar\r\n            style={{ data: { fill: \"#c43a31\", stroke: \"black\", strokeWidth: 2 } }} barWidth={({ index }) => index * 2 + 8}\r\n            data={dataLen}\r\n            alignment=\"start\"\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\nimport './App.css';\nimport LogIn from './component/LogIn';\nimport SignUp from './component/SignUp';\nimport LogOut from './component/LogOut';\nimport VacationList from './component/user/VacationList';\nimport VacationAdmin from './component/admin/VacationAdmin';\nimport Statistics from './component/admin/Statistics';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nexport default function App() {\n\n  let user = JSON.parse(localStorage.getItem('userInfo'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user === null) {\n      history.push('/component/LogIn');\n    } else if (user !== null && user.isAdmin === true) {\n      history.push('/component/VacationAdmin');\n    } else {\n      history.push('/component/VacationList');\n    }\n  }, [])\n\n  return (\n      <Switch>\n        <Route path=\"/component/LogIn\"> <LogIn /> </Route>\n        <Route path=\"/component/SignUp\"><SignUp /> </Route>\n        <Route path=\"/component/LogOut\"> <LogOut /> </Route>\n        <Route path=\"/component/VacationList\"><VacationList /> </Route>\n        <Route path=\"/component/VacationAdmin\"><VacationAdmin /> </Route>\n        <Route path=\"/component/Statistics\"><Statistics /></Route>\n      </Switch>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}