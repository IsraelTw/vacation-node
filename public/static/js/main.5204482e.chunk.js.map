{"version":3,"sources":["component/config.js","component/LogIn.jsx","component/SignUp.jsx","component/LogOut.jsx","component/admin/AddVaction.jsx","component/admin/VacationAdmin.jsx","component/admin/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","domain","LogIn","useState","userName","setUserName","password","setPassword","history","useHistory","a","alert","fetch","method","headers","body","JSON","stringify","user_name","sendReq","json","data","user_id","localStorage","setItem","userId","isLoggedIn","isAdmin","is_admin","push","error","console","log","Form","style","marginLeft","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","required","onChange","e","target","value","Button","onClick","SignUp","first_name","setfirst_name","last_name","setlast_name","setuser_name","text","aria-describedby","LogOut","undefined","clear","float","AddVaction","description","setDescription","location","setLocation","image","setImage","start","setStart","end","setEnd","price","setPrice","show","setShow","start_at","end_at","req","Modal","onHide","Header","closeButton","Body","marginRight","defaultValue","addVaction","VacationAdmin","vacList","setVacList","deleteVac","setDeleteVac","editVac","seteditVaction","vacId","setVacId","whichButton","setWhichButton","handleShow","whichBtn","Date","vac_id","useEffect","vacationAdmin","map","item","Card","className","width","maxWidth","height","backgroundColor","borderColor","display","color","dleteVacation","src","textAlign","Image","fluid","maxHeight","editVaction","Statistics","setLen","setName","dataReq","quarter","earnings","followers_mount","fn","theme","VictoryTheme","material","domainPadding","x","tickValues","length","tickFormat","dependentAxis","fill","barWidth","index","alignment","y","App","user","parse","getItem","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5204482e.chunk.js","sourcesContent":["module.exports = {\r\n    domain: 'https://vacationssss.herokuapp.com'\r\n    // domain:'http://localhost:3001'\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n// import { Route } from 'react-router';\r\n\r\nimport { domain } from './config';\r\n\r\nexport default function LogIn() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    async function signInHandler() {\r\n        if (userName === \"\" || password === \"\") {\r\n            return alert('user name or password empty')\r\n        }\r\n        try {\r\n            const sendReq = await fetch(domain + `/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user_name: userName,\r\n                    password: password\r\n                })\r\n            });\r\n            const data = await sendReq.json()\r\n\r\n            if (data.user_id !== '') {\r\n                localStorage.setItem('userInfo', JSON.stringify({ userName, password, userId: data[0].user_id, isLoggedIn: true, isAdmin: data[0].is_admin }));\r\n                if(data[0].is_admin){\r\n                   return history.push(\"./VacationAdmin\");\r\n                }\r\n                history.push(\"./VacationList\");\r\n            } else if (data.error === 'user name or password dosnet match') {\r\n                alert('user name or password dosnet match');\r\n            }\r\n            console.log(data);\r\n        }\r\n        catch (err) {\r\n            console.log('error fetch', err)\r\n        }\r\n    }\r\n    function signUpHandler() {\r\n        history.push(\"./SignUp\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form style={{ marginLeft: '35%' }}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button type='button' onClick={signInHandler}>LogIn</Button>\r\n                <Button type='button' onClick={signUpHandler} style={{ marginLeft: '20px' }}>Register</Button>\r\n\r\n            </Form>\r\n        </div >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { domain } from './config';\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n\r\n    const [first_name, setfirst_name] = useState('');\r\n    const [last_name, setlast_name] = useState('');\r\n    const [user_name, setuser_name] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function signUpHandler() {\r\n        if (first_name === '' || last_name === '' || user_name === '' || password === '') {\r\n            alert('all fildes are mandatori');\r\n            return;\r\n        }\r\n        const sendReq = await fetch(domain + '/signUp', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first_name: first_name,\r\n                last_name: last_name,\r\n                user_name: user_name,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await sendReq.text()\r\n        if (data === 'user name exzist') {\r\n            return alert('user name exzist ');\r\n        }\r\n        console.log(data);\r\n        history.push(\"./VactionList\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Form style={{ marginLeft: '2%' }} >\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setfirst_name(e.target.value)}\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"First name\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Last name\"\r\n                            onChange={(e) => setlast_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomuser_name\">\r\n                        <Form.Label>user_name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"user_name\"\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            required\r\n                            onChange={(e) => setuser_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button type='button' onClick={signUpHandler}>SignUp</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class SignUp extends Component {\r\n\r\n//     constructor() {\r\n//         super()\r\n\r\n//         this.state = {\r\n//             first_name: '',\r\n//             last_name: '',\r\n//             user_name: '',\r\n//             password: ''\r\n//         };\r\n//     }\r\n\r\n//     async signUpHandler() {\r\n//         // if (this.state.first_name === '' || this.state.last_name === '' || this.state.user_name === '' || this.state.password === '') {\r\n//         //     return alert('all fildes are mandatori')\r\n\r\n//         // }\r\n//         console.log(this.state.user_name)\r\n//         const sendReq = await fetch('http://localhost:3001/signUp', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Accept': 'application/json',\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(this.state)\r\n//         });\r\n//         const data = await sendReq.text()\r\n//         if (data === 'user name exzist') {\r\n//             return alert('user name exzist ');\r\n//         }\r\n//         console.log(data);\r\n//         this.history.push(\"./VactionList\");\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <Form style={{ marginLeft: '2%' }} >\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n//                             <Form.Label>First name</Form.Label>\r\n//                             <Form.Control\r\n//                                 onChange={(e) => this.setState({ first_name: e.target.value })}\r\n//                                 required\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"First name\"\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n//                             <Form.Label>Last name</Form.Label>\r\n//                             <Form.Control\r\n//                                 required\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Last name\"\r\n//                                 onChange={(e) => this.setState({ last_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustomuser_name\">\r\n//                             <Form.Label>user_name</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"user_name\"\r\n//                                 aria-describedby=\"inputGroupPrepend\"\r\n//                                 required\r\n//                                 onChange={(e) => this.setState({ user_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n//                             <Form.Label>Password</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"password\"\r\n//                                 placeholder=\"Password\"\r\n//                                 required\r\n//                                 onChange={(e) => this.setState({ first_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Button type='button' onClick={this.signUpHandler}>SignUp</Button>\r\n//                 </Form>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LogOut() {\r\n    \r\n    const history = useHistory();\r\n\r\n    function logOut() {\r\n\r\n        if (history === undefined) {\r\n            return;\r\n        }\r\n        localStorage.clear();\r\n        history.push(\"./LogIn\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={logOut} style={{float:'right'}}>log out</button>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { domain } from '../config';\r\n\r\nexport default function AddVaction() {\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [start, setStart] = useState('');\r\n    const [end, setEnd] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [show, setShow] = useState(true);\r\n    const handleClose = () => setShow(false);\r\n    const handleShoe = () => setShow(true);\r\n\r\n    async function addVaction() {\r\n        if (description === '' || location === '' || image === '' || start === '' || end === '' || price === '') {\r\n            return alert('all fields are mandatory')\r\n        }\r\n        const req = await fetch(domain + `/addVacation`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                description: description,\r\n                location: location,\r\n                image: image,\r\n                start_at: start,\r\n                end_at: end,\r\n                price: price\r\n            })\r\n        });\r\n        const data = await req.json();\r\n        console.log(data);\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form style={{ marginLeft: '2%', marginRight: '2%' }} >\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Location</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    onChange={(e) => setLocation(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    required\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                    defaultValue='https://cms.inspirato.com/ImageGen.ashx?image=/media/5723972/MauiWailea_Res_Andaz_Beach.jpg&width=1200'\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Start</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    placeholder=\"Start\"\r\n                                    required\r\n                                    onChange={(e) => setStart(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>End</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    placeholder=\"End\"\r\n                                    required\r\n                                    onChange={(e) => setEnd(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button type='button' onClick={() => addVaction()}>add</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport LogOut from '../LogOut';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport AddVaction from './AddVaction';\r\nimport { domain } from '../config';\r\n\r\n\r\nexport default function VacationAdmin() {\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [start, setStart] = useState('');\r\n    const [end, setEnd] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [vacList, setVacList] = useState([]);\r\n    const [deleteVac, setDeleteVac] = useState(0);\r\n    const [editVac, seteditVaction] = useState(0);\r\n    const [vacId, setVacId] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [whichButton, setWhichButton] = useState('');\r\n    const handleClose = () => setShow(false);\r\n    function handleShow(whichBtn) {\r\n        setShow(true);\r\n\r\n        if (whichBtn === 'edit') {\r\n            setDescription(vacId.description);\r\n            setLocation(vacId.location);\r\n            setPrice(vacId.price);\r\n            setImage(vacId.image);\r\n            setStart(vacId.start_at);\r\n            setEnd(vacId.end_at)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function vacationAdmin() {\r\n            const req = await fetch(domain + `/vactionAdmin`);\r\n            const data = await req.json();\r\n            console.log(data);\r\n            setVacList(data);\r\n        }\r\n        vacationAdmin();\r\n    }, [deleteVac, editVac])\r\n\r\n\r\n    async function dleteVacation(vacId) {\r\n        const req = await fetch('http://localhost:3001/deleteVacation', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ vacId })\r\n        });\r\n        const data = await req.text();\r\n        setDeleteVac(new Date())\r\n        console.log(data);\r\n    }\r\n\r\n\r\n    async function editVaction() {\r\n        alert(vacId.vac_id)\r\n        const req = await fetch(domain + `/${whichButton}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                description: description,\r\n                location: location,\r\n                image: image,\r\n                start_at: start,\r\n                end_at: end,\r\n                price: price,\r\n                vacId\r\n            })\r\n        });\r\n\r\n        const data = await req.json();\r\n        console.log(data);\r\n        setShow(false)\r\n        seteditVaction(new Date())\r\n    }\r\n\r\n\r\n\r\n    /////////////////\r\n    return (\r\n        <div >\r\n            <button onClick={() => { handleShow(); setWhichButton('addVacation') }}>add vacation</button>\r\n            <LogOut />\r\n            { vacList.map(item => {\r\n                return (\r\n                    <Card className='Card' style={{ width: 'auto', maxWidth: '200px', height: 'auto', backgroundColor: 'white', marginLeft: '2px', borderColor: 'lightblue', display: 'inline-block' }}>\r\n                        <button style={{ color: 'red', float: 'right', marginRight: '5px' }} onClick={() => dleteVacation(item.vac_id)}>x</button><br /><br />\r\n                        <button onClick={() => { handleShow('edit'); setVacId(item); setWhichButton('editVacation') }} style={{ color: 'gray', float: 'right', marginRight: '5px' }}>{<img src='https://cdn.onlinewebfonts.com/svg/img_530071.png' style={{ height: '20px' }} />}</button>\r\n                        <p>description: {item.description}</p>\r\n                        <p>location: {item.location}</p>\r\n                        <p style={{ textAlign: 'left' }}>${item.price}</p>\r\n                        <Image key={item.image} src={item.image} fluid style={{ maxWidth: '200px', maxHeight: 'auto' }} />\r\n                        <p>start: {item.start_at} end: {item.end_at} </p>\r\n                        <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                    </Card>\r\n                )\r\n            })\r\n            }\r\n\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form style={{ marginLeft: '2%', marginRight: '2%' }} >\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInputCapture={setDescription(vacId.description)}\r\n\r\n                                    onChange={(e) => { setDescription(e.target.value) }}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description\"\r\n                                    defaultValue={vacId.description}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setPrice(vacId.price)}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                    type=\"number\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    defaultValue={vacId.price}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Location</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setLocation(vacId.location)}\r\n                                    onChange={(e) => setLocation(e.target.value)}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    defaultValue={vacId.location}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setImage(vacId.image)}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    required\r\n                                    defaultValue={vacId.image}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Start</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setStart(vacId.start_at)}\r\n                                    onChange={(e) => setStart(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"Start\"\r\n                                    required\r\n                                    defaultValue={vacId.start_at}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>End</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setEnd(vacId.end_at)}\r\n                                    onChange={(e) => setEnd(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"End\"\r\n                                    required\r\n                                    defaultValue={vacId.end_at}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button type='button' onClick={() => editVaction(whichButton)}>send</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { domain } from '../config';\r\n\r\nimport {\r\n  VictoryBar, VictoryChart, VictoryAxis,\r\n  VictoryTheme, VictoryStack\r\n} from 'victory';\r\n\r\n\r\nconst data = [\r\n  { quarter: 1, earnings: 13 },\r\n  { quarter: 2, earnings: 16 },\r\n  { quarter: 3, earnings: 14 },\r\n  { quarter: 4, earnings: 19 }\r\n];\r\n\r\nexport default function Statistics() {\r\n  const [data, setFollowedVac] = useState([]);\r\n  const [dataLen, setLen] = useState([]);\r\n  const [dataName, setName] = useState([]);\r\n  useEffect(() => {\r\n    async function fn() {\r\n      const req = await fetch(domain + '/vacationFollowed');\r\n      const dataReq = await req.json();\r\n      setLen(dataReq[0].map(item => {\r\n        return ({ quarter: item.vac_id, earnings: item.followers_mount })\r\n      }))\r\n      setName(dataReq[0].map(item => {\r\n        return ({ quarter: item.vac_id, earnings: item.followers_mount })\r\n      }))\r\n    }\r\n    fn();\r\n  }, [])\r\n  console.log(data)\r\n  return (\r\n    <div style={{ width: '50%', height: '40%' }}>\r\n      <VictoryChart\r\n        // domainPadding will add space to each side of VictoryBar to\r\n        // prevent it from overlapping the axis\r\n        theme={VictoryTheme.material}\r\n        domainPadding={{ x: 30 }}\r\n      >\r\n        <VictoryAxis style={{ width: '40%', height: '40%' }}\r\n          // tickValues specifies both the number of ticks and where\r\n          // they are placed on the axis\r\n          tickValues={[data.length]}\r\n          tickFormat={[data.map(item => { return (item.vac_id) })]}\r\n        />\r\n        <VictoryAxis\r\n          dependentAxis\r\n          // tickFormat specifies how ticks should be displayed\r\n          tickFormat={(x) => x}\r\n        />\r\n        <VictoryBar\r\n          style={{ data: { fill: 'rgb(10 10 253 / 53%)' } }}\r\n          barWidth={({ index }) => index * 2 + 8}\r\n          data={data}\r\n          alignment=\"start\"\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  )\r\n}","import React from 'react';\n// import { Nav } from 'react-bootstrap'\nimport './App.css';\nimport LogIn from './component/LogIn';\nimport SignUp from './component/SignUp';\nimport VacationList from './component/user/VacationList';\nimport VacationAdmin from './component/admin/VacationAdmin';\nimport AddVaction from './component/admin/AddVaction';\nimport Statistics from './component/admin/Statistics';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default function App() {\n  let user = JSON.parse(localStorage.getItem('userInfo'));\n\n  // const [isAdmin, setIsadmin] = useState(false);\n\n\n  // if (localStorage.getItem('userInfo') != null) {\n  //   // if (JSON.parse(localStorage.getItem('userInfo')).isAdmin) {\n  //   //   return (<VacationAdmin />);\n  //   // }\n\n  //   // if (JSON.parse(localStorage.getItem('userInfo')).isLoggedIn && !JSON.parse(localStorage.getItem('userInfo')).isAdmin) {\n  //   //   return <VacationList />\n  //   // }\n  // }\n\n  return (\n    <div>\n      <Router>\n        <div>\n              {(() => {\n                if (user === null) {\n                  return <>\n                    <Link to=\"/component/Login\">Login</Link>\n                    <Route path=\"/component/LogIn\" ><LogIn /> </Route>\n                    <Route path=\"/component/SignUp\"><SignUp /> </Route>\n                  </>\n                }\n                else if (user.isAdmin) {\n                  return <>\n                    <nav>\n                      <ul>\n                        <li><Link to=\"/component/VacationAdmin\">Vacations admin</Link></li>\n                        <li><Link to=\"/component/Statistics\">Statistics</Link></li>\n                        <li><Link to=\"/component/AddVaction\">Add Vaction</Link></li>\n                      </ul>\n                    </nav>\n                    <Route path=\"/component/VacationAdmin\"><VacationAdmin /> </Route>\n                    <Route path=\"/component/AddVaction\"><AddVaction /></Route>\n                    <Route path=\"/component/Statistics\"><Statistics /></Route>\n                  </>\n                }\n                else {\n                  return <li><Link to=\"/component/VacationList\">Vacations List</Link></li>\n                }\n              })()}\n        </div>\n      </Router>\n    </div >\n  );\n}\n\n\n\n{/* {(() => {\n            if (user === null) {\n             \n            } */}\n            // else if (user.isAdmin) {\n            //   <>\n            //     <Route path=\"/component/VacationAdmin\"><VacationAdmin /> </Route>\n            //     <Route path=\"/component/AddVaction\"><AddVaction /></Route>\n            //     <Route path=\"/component/Statistics\"><Statistics /></Route>\n            //   </>\n            // }\n            // else { return <Route path=\"/component/VacationList\" ><VacationList /> </Route> }\n          // })}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}