{"version":3,"sources":["config.js","component/LogIn.jsx","component/SignUp.jsx","component/LogOut.jsx","component/user/VacationList.jsx","component/admin/Statistics.jsx","component/admin/VacationAdmin.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","domain","LogIn","useState","userName","setUserName","password","setPassword","history","useHistory","a","alert","fetch","method","headers","body","JSON","stringify","user_name","sendReq","json","undefined","data","user_id","localStorage","setItem","userId","isLoggedIn","isAdmin","is_admin","push","error","console","log","Form","style","marginLeft","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","required","onChange","e","target","value","onClick","SignUp","first_name","setfirst_name","last_name","setlast_name","setuser_name","aria-describedby","Button","LogOut","clear","float","VactionList","user","getItem","parse","vacList","setVacList","isfollowe","setIsfollwe","search","setSearch","date","setDate","vacation","Date","useEffect","req","vacations","textAlign","marginRight","variant","size","map","item","Card","className","width","Img","src","image","Text","id","vac_id","checked","follower_id","followHandler","visibility","htmlFor","followers_mount","location","description","price","start_at","end_at","Statistics","dataLen","setLen","dataReq","quarter","earnings","fn","height","theme","VictoryTheme","material","domainPadding","x","fill","stroke","strokeWidth","barWidth","index","alignment","y","VacationAdmin","setDescription","setLocation","setImage","start","setStart","end","setEnd","setPrice","deleteVac","setDeleteVac","editVac","seteditVaction","vacId","setVacId","show","setShow","whichButton","setWhichButton","handleShow","whichBtn","text","vacationAdmin","to","marginTop","dleteVacation","color","Modal","onHide","Header","closeButton","Body","defaultValue","addOrEditVaction","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3550a527.chunk.js","sourcesContent":["module.exports = {\r\n    domain: 'https://vacationssss.herokuapp.com'\r\n    // domain:'http://localhost:3001'\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport { domain } from '../config';\r\n\r\nexport default function LogIn() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n    async function signInHandler() {\r\n        if (userName === \"\" || password === \"\") {\r\n            return alert('user name or password empty')\r\n        }\r\n        try {\r\n            const sendReq = await fetch(domain + `/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user_name: userName,\r\n                    password: password\r\n                })\r\n            });\r\n            const data = await sendReq.json()\r\n\r\n            if (data[0].user_id !== undefined) {\r\n                localStorage.setItem('userInfo', JSON.stringify({ userName, password, userId: data[0].user_id, isLoggedIn: true, isAdmin: data[0].is_admin }));\r\n                if (data[0].is_admin) {\r\n                    return history.push(\"./VacationAdmin\");\r\n                }\r\n                history.push(\"./VacationList\");\r\n\r\n            } else if (data.error === 'user name or password dosnet match') {\r\n                alert('user name or password dosnet match');\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log('error fetching', err);\r\n        }\r\n    }\r\n    function signUpHandler() {\r\n        history.push(\"./SignUp\");\r\n    }\r\n\r\n    return (\r\n            <Form style={{ marginLeft: '35%' }}>\r\n                <h2>Log in form</h2>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <button type='button' onClick={signInHandler}>LogIn</button>\r\n                <button type='button' onClick={signUpHandler} style={{ marginLeft: '20px' }}>Register</button>\r\n            </Form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { domain } from '../config';\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n\r\n    const [first_name, setfirst_name] = useState('');\r\n    const [last_name, setlast_name] = useState('');\r\n    const [user_name, setuser_name] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function signUpHandler() {\r\n        if (first_name === '' || last_name === '' || user_name === '' || password === '') {\r\n            alert('all fildes are mandatori');\r\n            return;\r\n        }\r\n        const sendReq = await fetch(domain + '/signUp', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first_name: first_name,\r\n                last_name: last_name,\r\n                user_name: user_name,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await sendReq.json()\r\n        if (data === 'user name allready exzist') {\r\n            return alert(data);\r\n        }\r\n        history.push(\"LogIn\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Form style={{ marginLeft: '2%' }} >\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setfirst_name(e.target.value)}\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"First name\"\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Last name\"\r\n                            onChange={(e) => setlast_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomuser_name\">\r\n                        <Form.Label>user_name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"user_name\"\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            required\r\n                            onChange={(e) => setuser_name(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button type='button' onClick={signUpHandler}>SignUp</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class SignUp extends Component {\r\n\r\n//     constructor() {\r\n//         super()\r\n\r\n//         this.state = {\r\n//             first_name: '',\r\n//             last_name: '',\r\n//             user_name: '',\r\n//             password: ''\r\n//         };\r\n//     }\r\n\r\n//     async signUpHandler() {\r\n//         // if (this.state.first_name === '' || this.state.last_name === '' || this.state.user_name === '' || this.state.password === '') {\r\n//         //     return alert('all fildes are mandatori')\r\n\r\n//         // }\r\n//         console.log(this.state.user_name)\r\n//         const sendReq = await fetch('http://localhost:3001/signUp', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Accept': 'application/json',\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(this.state)\r\n//         });\r\n//         const data = await sendReq.text()\r\n//         if (data === 'user name exzist') {\r\n//             return alert('user name exzist ');\r\n//         }\r\n//         console.log(data);\r\n//         this.history.push(\"./VactionList\");\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <Form style={{ marginLeft: '2%' }} >\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n//                             <Form.Label>First name</Form.Label>\r\n//                             <Form.Control\r\n//                                 onChange={(e) => this.setState({ first_name: e.target.value })}\r\n//                                 required\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"First name\"\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n//                             <Form.Label>Last name</Form.Label>\r\n//                             <Form.Control\r\n//                                 required\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Last name\"\r\n//                                 onChange={(e) => this.setState({ last_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustomuser_name\">\r\n//                             <Form.Label>user_name</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"user_name\"\r\n//                                 aria-describedby=\"inputGroupPrepend\"\r\n//                                 required\r\n//                                 onChange={(e) => this.setState({ user_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n\r\n//                     <Form.Row>\r\n//                         <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n//                             <Form.Label>Password</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"password\"\r\n//                                 placeholder=\"Password\"\r\n//                                 required\r\n//                                 onChange={(e) => this.setState({ first_name: e.target.value })}\r\n//                             />\r\n//                         </Form.Group>\r\n//                     </Form.Row>\r\n//                     <Button type='button' onClick={this.signUpHandler}>SignUp</Button>\r\n//                 </Form>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LogOut() {\r\n    \r\n    const history = useHistory();\r\n\r\n    function logOut() {\r\n\r\n        if (history === undefined) {\r\n            return;\r\n        }\r\n        localStorage.clear();\r\n        history.push(\"./LogIn\");\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={logOut} style={{float:'right'}}>log out</button>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { domain } from '../../config';\r\nimport { Button } from 'react-bootstrap';\r\nimport LogOut from '../LogOut'\r\nexport default function VactionList() {\r\n    const history = useHistory();\r\n    let user = 'a';\r\n    if (localStorage.getItem('userInfo') === null || JSON.parse(localStorage.getItem('userInfo')).isAdmin === true) {\r\n        history.push('LogIn')\r\n    }\r\n    else {\r\n        user = JSON.parse(localStorage.getItem('userInfo'));\r\n    }\r\n    const [vacList, setVacList] = useState([]);\r\n    const [isfollowe, setIsfollwe] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [date, setDate] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        async function vacations() {\r\n            const req = await fetch(domain + `/vaction/${user.userId}`);\r\n            const data = await req.json();\r\n            setVacList(data[0]);\r\n            console.log(vacList);\r\n        }\r\n        vacations();\r\n    }, [isfollowe])\r\n\r\n\r\n    async function followHandler(vacation) {\r\n        try {\r\n            await fetch(domain + `/isFollow`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ user_id: user.userId, vacation })\r\n            });\r\n            setIsfollwe(new Date());\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    async function serachHandel() {\r\n        try {\r\n            const sendReq = await fetch(domain + '/searchVacation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ search, date, user: user.userId })\r\n            });\r\n            const data = await sendReq.json();\r\n            setVacList(data[0]);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function clearHandel() {\r\n        setIsfollwe(new Date());\r\n        setSearch('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n            <LogOut/>\r\n            <h1>hello {user.userName}</h1>\r\n            \r\n            </div>\r\n            \r\n            <div style={{ marginLeft: '30%', marginRight: '30%' }}>\r\n\r\n                <input type='text' value={search} placeholder='search by description' onChange={(e) => { setSearch(e.target.value) }} />\r\n                <input type=\"date\" onChange={(e) => { setDate(e.target.value) }} />\r\n                <Button variant=\"outline-primary\" size='sm' onClick={serachHandel}>Search</Button>\r\n                <Button variant=\"outline-primary\" size='sm' onClick={clearHandel}>clear</Button>\r\n            </div>\r\n            {/* <SerachVacation setVacList={setVacList} /> */}\r\n            <br />\r\n            {vacList.map(item => {\r\n                return (\r\n                    <div style={{ float: 'left', marginLeft: '5px' }}>\r\n                        <Card className='Card' style={{ width: '15rem' }}>\r\n                            <Card.Img variant=\"top\" key={item.image} src={item.image} />\r\n                            <Card.Text>\r\n                                <span style={{ float: 'right' }}>\r\n                                    <input id={item.vac_id} type=\"checkbox\" checked={item.follower_id != null} onChange={() => followHandler(item.vac_id)} style={{ float: 'right', visibility: 'hidden' }} />\r\n                                    {(() => {\r\n                                        if (item.follower_id != null) {\r\n                                            return <label htmlFor={item.vac_id} style={{ float: 'right' }}>❤️</label>\r\n                                        }\r\n                                        else {\r\n                                            return <label htmlFor={item.vac_id} style={{ float: 'right' }}>🤍</label>\r\n                                        }\r\n                                    })()}\r\n                                    <p style={{ float: 'right' }}>{item.followers_mount}</p>\r\n                                </span>\r\n                            location: {item.location}<br />\r\n                            description: {item.description}<br />\r\n                            ${item.price}<br />\r\n                            start: {item.start_at}<br />\r\n                             end: {item.end_at}<br />\r\n                                <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { domain } from '../../config';\r\nimport { VictoryBar, VictoryChart, VictoryTheme } from 'victory';\r\n\r\nexport default function Statistics() {\r\n  const [dataLen, setLen] = useState([]);\r\n  useEffect(() => {\r\n    async function fn() {\r\n      const req = await fetch(domain + '/vacationFollowed');\r\n      const dataReq = await req.json();\r\n      setLen(dataReq[0].map(item => {\r\n        return ({ quarter: 'vacation ' + item.vac_id, earnings: item.followers_mount })\r\n      }))\r\n    }\r\n    fn();\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ width: '50%', height: '40%' }}>\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        domainPadding={{ x: 30 }}\r\n      >\r\n        <VictoryBar\r\n style={{ data: { fill: \"#c43a31\", stroke: \"black\", strokeWidth: 2 }}}          barWidth={({ index }) => index * 2 + 8}\r\n          data={dataLen}\r\n          alignment=\"start\"\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport LogOut from '../LogOut';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport { domain } from '../../config';\r\nimport { useHistory,Link } from \"react-router-dom\";\r\nimport Statistics from './Statistics';\r\n\r\n\r\nexport default function VacationAdmin() {\r\n    const history = useHistory();\r\n\r\n    if (localStorage.getItem('userInfo') === null || JSON.parse(localStorage.getItem('userInfo')).isAdmin == false) {\r\n        history.push(\"LogIn\");\r\n    }\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [start, setStart] = useState('');\r\n    const [end, setEnd] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [vacList, setVacList] = useState([]);\r\n    const [deleteVac, setDeleteVac] = useState(0);\r\n    const [editVac, seteditVaction] = useState(0);\r\n    const [vacId, setVacId] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [whichButton, setWhichButton] = useState('');\r\n    const handleClose = () => setShow(false);\r\n    function handleShow(whichBtn) {\r\n        setShow(true);\r\n\r\n        if (whichBtn === 'edit') {\r\n            setDescription(vacId.description);\r\n            setLocation(vacId.location);\r\n            setPrice(vacId.price);\r\n            setImage(vacId.image);\r\n            setStart(vacId.start_at);\r\n            setEnd(vacId.end_at)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function vacationAdmin() {\r\n            const req = await fetch(domain + `/vactionAdmin`);\r\n            const data = await req.json();\r\n            console.log(data);\r\n            setVacList(data);\r\n        }\r\n        vacationAdmin();\r\n    }, [deleteVac, editVac])\r\n\r\n\r\n    async function dleteVacation(vacId) {\r\n        const req = await fetch('http://localhost:3001/deleteVacation', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ vacId })\r\n        });\r\n        const data = await req.text();\r\n        setDeleteVac(new Date())\r\n        console.log(data);\r\n    }\r\n\r\n\r\n    async function addOrEditVaction() {\r\n        const req = await fetch(domain + `/${whichButton}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                description: description,\r\n                location: location,\r\n                image: image,\r\n                start_at: start,\r\n                end_at: end,\r\n                price: price,\r\n                vacId\r\n            })\r\n        });\r\n\r\n        const data = await req.json();\r\n        console.log(data);\r\n        setShow(false)\r\n        seteditVaction(new Date())\r\n    }\r\n\r\n\r\n\r\n    /////////////////\r\n    return (\r\n        <div >\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                    <button onClick={() => { handleShow(); setWhichButton('addVacation') }}>add vacation</button>\r\n                    </li>\r\n                    <li><Link to=\"/component/Statistics\">Statistics</Link></li>\r\n                    <li><LogOut/></li>\r\n                </ul>\r\n            </nav>\r\n            <h1 style={{ textAlign: 'center', marginTop: '0%' }}>hellow admin</h1>\r\n            { vacList.map(item => {\r\n                return (\r\n                    // <Card className='Card' style={{ float: \"left\", width: '17rem', backgroundColor: 'white', marginLeft: '2px', borderColor: 'lightblue' }}>\r\n                    //     <Image key={item.image} src={item.image} fluid style={{ width: '17rem', height: '180px' }} />\r\n\r\n                    //     <closeButton style={{ color: 'gray', float: 'right', marginRight: '5px' }}\r\n                    //         onClick={() => dleteVacation(item.vac_id)}>❌</closeButton><br /><br />\r\n\r\n                    //     <editButton className=\"btn btn\" onClick={() => { handleShow('edit'); setVacId(item); setWhichButton('editVacation') }}\r\n                    //         style={{ color: 'gray', float: 'right', marginRight: '5px' }}>🖋</editButton>\r\n\r\n                    //     {item.followers_mount}\r\n                    // location: {item.location}\r\n                    //     <p>description: {item.description}</p>\r\n                    //     <p style={{ textAlign: 'left' }}>${item.price}</p>\r\n                    //     <p>start: {item.start_at} end: {item.end_at} </p>\r\n\r\n                    //     <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                    // </Card>\r\n\r\n\r\n\r\n                    <div style={{ float: 'left', marginLeft: '5px' }}>\r\n                        <Card className='Card' style={{ width: '15rem' }}>\r\n                            <Button size='sm' variant=''\r\n                            //   style={{ color: 'gray', float: 'right', marginRight: '5px' }}\r\n                                onClick={() => dleteVacation(item.vac_id)}>❌</Button>\r\n                            <Card.Img variant=\"top\" key={item.image} src={item.image} />\r\n\r\n                                 <Button size='sm' variant='' onClick={() => { handleShow('edit'); setVacId(item); setWhichButton('editVacation') }}\r\n                            style={{ color: 'gray', float: 'right', marginRight: '5px' }}>🖋</Button>\r\n\r\n                            <Card.Text>\r\n                                <p style={{ float: 'right' }}>followers: {item.followers_mount}</p>\r\n                        location: {item.location}<br />\r\n                        description: {item.description}<br />\r\n                        ${item.price}<br />\r\n                        start: {item.start_at}<br />\r\n                         end: {item.end_at}<br />\r\n                                <p style={{ textAlign: 'left' }}>{item.vac_id}</p>\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </div>\r\n\r\n                )\r\n            })\r\n            }\r\n\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form style={{ marginLeft: '2%', marginRight: '2%' }} >\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInputCapture={setDescription(vacId.description)}\r\n\r\n                                    onChange={(e) => { setDescription(e.target.value) }}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description\"\r\n                                    defaultValue={vacId.description}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setPrice(vacId.price)}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                    type=\"number\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    defaultValue={vacId.price}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                <Form.Label>Location</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setLocation(vacId.location)}\r\n                                    onChange={(e) => setLocation(e.target.value)}\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    defaultValue={vacId.location}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setImage(vacId.image)}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Image\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    required\r\n                                    defaultValue={vacId.image}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>Start</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setStart(vacId.start_at)}\r\n                                    onChange={(e) => setStart(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"Start\"\r\n                                    required\r\n                                    defaultValue={vacId.start_at}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                <Form.Label>End</Form.Label>\r\n                                <Form.Control\r\n                                    // onBeforeInput={setEnd(vacId.end_at)}\r\n                                    onChange={(e) => setEnd(e.target.value)}\r\n                                    type=\"date\"\r\n                                    placeholder=\"End\"\r\n                                    required\r\n                                    defaultValue={vacId.end_at}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button type='button' onClick={() => addOrEditVaction(whichButton)}>send</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div >\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport './App.css';\nimport LogIn from './component/LogIn';\nimport SignUp from './component/SignUp';\nimport LogOut from './component/LogOut';\nimport VacationList from './component/user/VacationList';\nimport VacationAdmin from './component/admin/VacationAdmin';\nimport Statistics from './component/admin/Statistics';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\n\nexport default function App() {\n\n  let user = JSON.parse(localStorage.getItem('userInfo'));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user === null) {\n      history.push('/component/LogIn');\n    } else if (user !== null && user.isAdmin === true) {\n      history.push('/component/VacationAdmin');\n    } else {\n      history.push('/component/VacationList');\n    }\n  }, [])\n\n  return (\n    <div>\n      <nav>\n        {/* <ul>\n          {(() => {\n            if (user !== null && user.isAdmin === true) {\n              return <>\n                <li><Link to=\"/component/Statistics\">Statistics</Link></li>\n                <li style={{ float: 'right' }}><Link to=\"/component/LogOut\">Logout</Link></li>\n                <li style={{ float: 'right', marginTop: '15px', color: 'black' }}>hello {user.userName}</li>\n              </>\n            }\n            else if (user !== null && user.isAdmin !== true) {\n              return <>\n                <li style={{ float: 'right' }}><Link to=\"/component/LogOut\">Logout</Link></li>\n              </>\n            }\n\n          })()}\n        </ul> */}\n      </nav>\n      <Switch>\n        <Route path=\"/component/LogIn\"> <LogIn /> </Route>\n        <Route path=\"/component/SignUp\"><SignUp /> </Route>\n        <Route path=\"/component/LogOut\"> <LogOut /> </Route>\n        <Route path=\"/component/VacationList\"><VacationList /> </Route>\n        <Route path=\"/component/VacationAdmin\"><VacationAdmin /> </Route>\n        <Route path=\"/component/Statistics\"><Statistics /></Route>\n      </Switch>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}